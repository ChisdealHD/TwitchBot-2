{"commands":{"type":"object","val":{"say":{"type":"object","val":{"command":{"type":"string","val":"say"},"result":{"type":"function","val":"function (o) {this.say(o.rest)}"},"free":{"type":"boolean","val":"false"}}},"ask":{"type":"object","val":{"command":{"type":"string","val":"ask"},"result":{"type":"function","val":"function (o) {\r\n\t\t\treturn ASK[0|ASK.length*Math.random()];\r\n\t\t}"},"free":{"type":"boolean","val":"true"}}},"commands":{"type":"object","val":{"command":{"type":"string","val":"commands"},"result":{"type":"function","val":"function () {\r\n\t\t\treturn 'The commands are: ' + this.getFreeCommands().join(', ');\r\n\t\t}"},"free":{"type":"boolean","val":"true"}}},"help":{"type":"object","val":{"command":{"type":"string","val":"help"},"result":{"type":"function","val":"function () {\r\n\t\t\treturn 'The commands are: ' + this.getFreeCommands().join(', ');\r\n\t\t}"},"free":{"type":"boolean","val":"true"}}},"addcommand":{"type":"object","val":{"command":{"type":"string","val":"addcommand"},"result":{"type":"function","val":"function (o) {\r\n\t\t\tvar name = o.args[0];\r\n\t\t\tvar rest = o.rest.slice(name.length+1).trim();\r\n\t\t\tthis.addCommand(name, rest);\r\n\t\t\treturn 'Added command ' + name + '.';\r\n\t\t}"},"free":{"type":"boolean","val":"false"}}},"addfreecommand":{"type":"object","val":{"command":{"type":"string","val":"addfreecommand"},"result":{"type":"function","val":"function (o) {\r\n\t\t\tvar name = o.args[0];\r\n\t\t\tvar rest = o.rest.slice(name.length+1).trim();\r\n\t\t\tthis.addCommand({command: name, result: rest, free: true});\r\n\t\t\treturn 'Added command ' + name + '.';\r\n\t\t}"},"free":{"type":"boolean","val":"false"}}},"removecommand":{"type":"object","val":{"command":{"type":"string","val":"removecommand"},"result":{"type":"function","val":"function (o) {\r\n\t\t\tvar name = o.args[0];\r\n\t\t\tthis.removeCommand(name);\r\n\t\t\treturn 'Removed command ' + name + '.';\r\n\t\t}"},"free":{"type":"boolean","val":"false"}}},"do":{"type":"object","val":{"command":{"type":"string","val":"do"},"result":{"type":"function","val":"function (o) {\r\n\t\t\tvar s;\r\n\t\t\ttry {\r\n\t\t\t\ts = eval('(function(){return \"\"+('+o.rest+')})').call(this);\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn 'Error occured: ' + e;\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}"},"free":{"type":"boolean","val":"false"}}},"js":{"type":"object","val":{"command":{"type":"string","val":"js"},"result":{"type":"function","val":"function (o) {\r\n\t\t\tvar s;\r\n\t\t\ttry {\r\n\t\t\t\ts = eval('(function(){return \"\"+('+o.rest+')})').call(this);\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn 'Error occured: ' + e;\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}"},"free":{"type":"boolean","val":"false"}}},"openbet":{"type":"object","val":{"command":{"type":"string","val":"openbet"},"result":{"type":"function","val":"function (o) {bets = []; betsopen = true; betdescription = o.rest; pot = 0; return 'Bets opened!'}"},"free":{"type":"boolean","val":"false"}}},"reopenbet":{"type":"object","val":{"command":{"type":"string","val":"reopenbet"},"result":{"type":"function","val":"function () {betsopen = true; return 'Bets reopened!'}"},"free":{"type":"boolean","val":"false"}}},"closebet":{"type":"object","val":{"command":{"type":"string","val":"closebet"},"result":{"type":"function","val":"function () {if(betsopen) {betsopen = false; return 'Bets closed!'}}"},"free":{"type":"boolean","val":"false"}}},"currentbet":{"type":"object","val":{"command":{"type":"string","val":"currentbet"},"result":{"type":"function","val":"function () {return betdescription || 'No bet description'}"},"free":{"type":"boolean","val":"true"}}},"pot":{"type":"object","val":{"command":{"type":"string","val":"pot"},"result":{"type":"function","val":"function () {return 'Current pot: ' + pot}"},"free":{"type":"boolean","val":"true"}}},"endbet":{"type":"object","val":{"command":{"type":"string","val":"endbet"},"result":{"type":"function","val":"function (o) {\r\n\t\tif(bets.length == 0) return 'No bets were made.';\r\n\r\n\t\tvar outcome_s = o.rest.trim('').split(/\\s+/g)[0];\r\n\t\tvar outcome = getOutcome(outcome_s);\r\n\t\tvar val = outcome.val;\r\n\t\tvar t = outcome.type;\r\n\r\n\t\tvar winners = [];\r\n\t\tif(t == 'word') {\r\n\t\t\tfor(var i = 0, l = bets.length; i < l; i++) {\r\n\t\t\t\tvar c = bets[i];\r\n\t\t\t\tif(t == c.outcome.type && c.outcome.val == val)\r\n\t\t\t\t\twinners.push(c.player);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar pos = [];\r\n\t\t\tfor(var i = 0, l = bets.length; i < l; i++) {\r\n\t\t\t\tvar c = bets[i];\r\n\t\t\t\tif(t == c.outcome.type)\r\n\t\t\t\t\tpos.push({player: c.player, val: c.outcome.val});\r\n\t\t\t}\r\n\t\t\tpos = pos.sort(function(x, y) {\r\n\t\t\t\treturn x.val - y.val;\r\n\t\t\t});\r\n\t\t\tvar f = pos[0].val;\r\n\t\t\tconsole.log(f);\r\n\t\t\tfor(var i = 0, l = pos.length; i < l; i++) {\r\n\t\t\t\tconsole.log(i, pos[i]);\r\n\t\t\t\tif(f == pos[i].val) {\r\n\t\t\t\t\twinners.push(pos[i].player);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(winners);\r\n\r\n\t\tvar amount = 0|pot/winners.length;\r\n\t\tfor(var i = 0, l = winners.length; i < l; i++) {\r\n\t\t\tvar winner = winners[i];\r\n\t\t\tvar data = checkPlayer(winner);\r\n\t\t\tdata.coins += amount;\r\n\t\t\tdata.betwins++;\r\n\t\t\tdata.betcoinswon += amount;\r\n\t\t}\r\n\r\n\t\tbets = [];\r\n\t\tbetsopen = false;\r\n\t\tbetdescription = '';\r\n\t\tpot = 0;\r\n\r\n\t\treturn 'Bet ended! ' + winners.join(', ') + ' won ' + amount + '!';\r\n\t}"},"free":{"type":"boolean","val":"false"}}},"bet":{"type":"object","val":{"command":{"type":"string","val":"bet"},"result":{"type":"function","val":"function (o) {\r\n\t\tif(!betsopen) return;\r\n\r\n\t\tvar player = o.from;\r\n\t\tvar data = checkPlayer(player);\r\n\t\tvar amount = +o.args[0];\r\n\t\tif(!isNaN(amount)) amount |= 0;\t\r\n\t\tif(!amount || isNaN(amount) || amount <= 0)\r\n\t\t\treturn player + ': Use the command like: !bet [amount to gamble, positive number] [outcome]';\r\n\r\n\t\tvar time = data.betlimit;\r\n\t\tvar now = Date.now();\r\n\t\tif(now - time < LIMIT)\r\n\t\t\treturn player + ': You have to wait ' + (0|(LIMIT - (now - time))/1000) + ' more seconds before you can play again.';\r\n\t\tdata.betlimit = now;\r\n\r\n\t\tvar playerAmount = data.coins;\r\n\t\tif(playerAmount <= 0 || playerAmount < amount) return player + \": You don't have enough \" + COINNAME + \".\";\r\n\t\t\r\n\t\tvar outcome_s = o.args[1];\r\n\t\tvar outcome = getOutcome(outcome_s);\r\n\t\tif(!outcome) return player + ': Invalid outcome';\r\n\r\n\t\tpot += amount;\r\n\t\tdata.coins -= amount;\r\n\t\tdata.betcoinsspent += amount;\r\n\t\tdata.betgames++;\r\n\t\t\r\n\t\tbets.push({player: player, outcome: outcome});\r\n\t\treturn player + ': You bet ' + amount + ' on ' + outcome_s;\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"logs":{"type":"object","val":{"command":{"type":"string","val":"logs"},"result":{"type":"function","val":"function (x) {\r\n\t\tvar n = +x.rest;\r\n\t\tif(!isNaN(n) && n != 0)\r\n\t\t\treturn showLogs(logs.slice(n));\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"searchlogs":{"type":"object","val":{"command":{"type":"string","val":"searchlogs"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar m = o.rest.trim().toLowerCase();\r\n\t\tfor(var i = 0, a = logs, l = a.length, r = []; i < l; i++) {\r\n\t\t\tvar c = a[i];\r\n\t\t\tif(typeof c == 'string') {\r\n\t\t\t\tvar line = c.trim().toLowerCase();\r\n\t\t\t\tif(line.indexOf(m) > -1) r.push(c);\r\n\t\t\t} else {\r\n\t\t\t\tvar line = c.message.trim().toLowerCase();\r\n\t\t\t\tif(line.indexOf(m) > -1) r.push(c);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(r.length == 0) return 'No matches';\r\n\t\telse return 'Found ' + r.length + ' matches\\n' + showLogs(r);\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"searchlogsfrom":{"type":"object","val":{"command":{"type":"string","val":"searchlogsfrom"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar name = o.args[0].trim().toLowerCase();\r\n\t\tvar m = o.rest.slice(name.length+1).trim().toLowerCase();\r\n\t\tfor(var i = 0, a = logs, l = a.length, r = []; i < l; i++) {\r\n\t\t\tvar c = a[i];\r\n\t\t\tif(typeof c == 'string') {\r\n\t\t\t\tvar t = c.toLowerCase();\r\n\t\t\t\tvar spl = t.split(':');\r\n\t\t\t\tvar from = t[0].toLowerCase().trim();\r\n\t\t\t\tvar line = t.slice(1).join(':').trim();\r\n\t\t\t\tif(from == name && line.indexOf(m) > -1) r.push(c);\r\n\t\t\t} else {\r\n\t\t\t\tvar line = c.message.toLowerCase();\r\n\t\t\t\tif(c.from.toLowerCase() == name && line.indexOf(m) > -1) r.push(c);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(r.length == 0) return 'No matches';\r\n\t\telse return 'Found ' + r.length + ' matches\\n' + showLogs(r);\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"countlogs":{"type":"object","val":{"command":{"type":"string","val":"countlogs"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar m = o.rest.trim().toLowerCase();\r\n\t\tfor(var i = 0, a = logs, l = a.length, r = 0; i < l; i++) {\r\n\t\t\tvar c = a[i];\r\n\t\t\tif(typeof c == 'string') {\r\n\t\t\t\tvar line = c.trim().toLowerCase();\r\n\t\t\t\tif(line.indexOf(m) > -1) r++;\r\n\t\t\t} else {\r\n\t\t\t\tvar line = c.message.trim().toLowerCase();\r\n\t\t\t\tif(line.indexOf(m) > -1) r++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(r.length == 0) return 'No matches';\r\n\t\telse return 'Found ' + r + ' matches';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"countlogsfrom":{"type":"object","val":{"command":{"type":"string","val":"countlogsfrom"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar name = o.args[0].trim().toLowerCase();\r\n\t\tvar m = o.rest.slice(name.length+1).trim().toLowerCase();\r\n\t\tfor(var i = 0, a = logs, l = a.length, r = 0; i < l; i++) {\r\n\t\t\tvar c = a[i];\r\n\t\t\tif(typeof c == 'string') {\r\n\t\t\t\tvar t = c.toLowerCase();\r\n\t\t\t\tvar spl = t.split(':');\r\n\t\t\t\tvar from = t[0].toLowerCase().trim();\r\n\t\t\t\tvar line = t.slice(1).join(':').trim();\r\n\t\t\t\tif(from == name && line.indexOf(m) > -1) r++;\r\n\t\t\t} else {\r\n\t\t\t\tvar line = c.message.toLowerCase();\r\n\t\t\t\tif(c.from.toLowerCase() == name && line.indexOf(m) > -1) r++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(r.length == 0) return 'No matches';\r\n\t\telse return 'Found ' + r + ' matches';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"logssize":{"type":"object","val":{"command":{"type":"string","val":"logssize"},"result":{"type":"function","val":"function () {\r\n\t\treturn 'The logs file has ' + logs.length + ' lines.';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"quote":{"type":"object","val":{"command":{"type":"string","val":"quote"},"result":{"type":"function","val":"function (o) {\r\n\t\tif(o.rest.trim().length == 0) return getQuote();\r\n\t\tvar group = o.rest.trim();\r\n\t\tvar m = findMatch(group, keys(quotes));\r\n\t\tif(m) return getQuote(m);\r\n\t\treturn 'Cannot find a quote group called ' + group;\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"quotefrom":{"type":"object","val":{"command":{"type":"string","val":"quotefrom"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar name = o.rest.trim();\r\n\t\tfor(var k in quotes)\r\n\t\t\tfor(var nameq in quotes[k])\r\n\t\t\t\tif(match(name, nameq))\r\n\t\t\t\t\treturn getQuote(k, nameq);\r\n\t\treturn 'Cannot find a quote group called ' + group;\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"addquote":{"type":"object","val":{"command":{"type":"string","val":"addquote"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar group = DEFAULT;\r\n\t\tvar s = o.rest.split(':');\r\n\t\tvar name = '', quote = '';\r\n\t\tif(s.length == 1) {\r\n\t\t\tquote = s[0].trim();\r\n\t\t} else {\r\n\t\t\tname = s[0].trim();\r\n\t\t\tquote = s.slice(1).join(':').trim();\r\n\t\t}\r\n\t\tquotes[group] = quotes[group] || {};\r\n\t\tquotes[group][name] = quotes[group][name] || [];\r\n\t\tquotes[group][name].push(quote);\r\n\t\treturn 'Quote of ' + name + ' added!';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"addquoteto":{"type":"object","val":{"command":{"type":"string","val":"addquoteto"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar group = o.args[0];\r\n\t\tvar s = o.rest.slice(group.length+1).trim().split(':');\r\n\t\tvar name = '', quote = '';\r\n\t\tif(s.length == 1) {\r\n\t\t\tquote = s[0].trim();\r\n\t\t} else {\r\n\t\t\tname = s[0].trim();\r\n\t\t\tquote = s.slice(1).join(':').trim();\r\n\t\t}\r\n\t\tquotes[group] = quotes[group] || {};\r\n\t\tquotes[group][name] = quotes[group][name] || [];\r\n\t\tquotes[group][name].push(quote);\r\n\r\n\t\treturn 'Quote of ' + name + ' added!';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"dxquote":{"type":"object","val":{"command":{"type":"string","val":"dxquote"},"result":{"type":"function","val":"function _t(o) {\r\n\t\t\t\tvar name = o.rest.trim();\r\n\t\t\t\tvar gr = _t.group;\r\n\t\t\t\tif(!quotes[gr])\r\n\t\t\t\t\treturn 'Cannot find a quote group called ' + gr;\r\n\t\t\t\tif(!name) return getQuote(gr);\r\n\t\t\t\tvar m = findMatch(name, keys(quotes[gr]));\r\n\t\t\t\tif(m) return getQuote(gr, m);\r\n\t\t\t\treturn 'Could not find a quote.';\r\n\t\t\t}"},"free":{"type":"boolean","val":"true"}}},"hrquote":{"type":"object","val":{"command":{"type":"string","val":"hrquote"},"result":{"type":"function","val":"function _t(o) {\r\n\t\t\t\tvar name = o.rest.trim();\r\n\t\t\t\tvar gr = _t.group;\r\n\t\t\t\tif(!quotes[gr])\r\n\t\t\t\t\treturn 'Cannot find a quote group called ' + gr;\r\n\t\t\t\tif(!name) return getQuote(gr);\r\n\t\t\t\tvar m = findMatch(name, keys(quotes[gr]));\r\n\t\t\t\tif(m) return getQuote(gr, m);\r\n\t\t\t\treturn 'Could not find a quote.';\r\n\t\t\t}"},"free":{"type":"boolean","val":"true"}}},"iwquote":{"type":"object","val":{"command":{"type":"string","val":"iwquote"},"result":{"type":"function","val":"function _t(o) {\r\n\t\t\t\tvar name = o.rest.trim();\r\n\t\t\t\tvar gr = _t.group;\r\n\t\t\t\tif(!quotes[gr])\r\n\t\t\t\t\treturn 'Cannot find a quote group called ' + gr;\r\n\t\t\t\tif(!name) return getQuote(gr);\r\n\t\t\t\tvar m = findMatch(name, keys(quotes[gr]));\r\n\t\t\t\tif(m) return getQuote(gr, m);\r\n\t\t\t\treturn 'Could not find a quote.';\r\n\t\t\t}"},"free":{"type":"boolean","val":"true"}}},"userquote":{"type":"object","val":{"command":{"type":"string","val":"userquote"},"result":{"type":"function","val":"function _t(o) {\r\n\t\t\t\tvar name = o.rest.trim();\r\n\t\t\t\tvar gr = _t.group;\r\n\t\t\t\tif(!quotes[gr])\r\n\t\t\t\t\treturn 'Cannot find a quote group called ' + gr;\r\n\t\t\t\tif(!name) return getQuote(gr);\r\n\t\t\t\tvar m = findMatch(name, keys(quotes[gr]));\r\n\t\t\t\tif(m) return getQuote(gr, m);\r\n\t\t\t\treturn 'Could not find a quote.';\r\n\t\t\t}"},"free":{"type":"boolean","val":"true"}}},"slots":{"type":"object","val":{"command":{"type":"string","val":"slots"},"result":{"type":"function","val":"function (o) {\r\n\t\tif(!working) return;\r\n\r\n\t\tvar player = o.from;\r\n\t\tvar data = checkPlayer(player);\r\n\t\tvar amount = +o.args[0];\r\n\t\tif(!isNaN(amount)) amount |= 0;\t\r\n\t\tif(!amount || isNaN(amount) || amount <= 0)\r\n\t\t\treturn player + ': Use the command like: !slots [amount to gamble, positive number]';\r\n\r\n\t\tvar time = data.limit;\r\n\t\tvar now = Date.now();\r\n\t\tif(now - time < LIMIT)\r\n\t\t\treturn player + ': You have to wait ' + (0|(LIMIT - (now - time))/1000) + ' more seconds before you can play again.';\r\n\t\tdata.limit = now;\r\n\r\n\t\tvar playerAmount = data.coins;\r\n\t\tif(playerAmount <= 0 || playerAmount < amount) return player + \": You don't have enough \" + COINNAME + \".\";\r\n\t\t\r\n\t\tdata.coins -= amount;\r\n\t\tdata.coinsspent += amount;\r\n\t\tdata.games++;\r\n\t\t\r\n\t\tvar r = [1, 2, 3].map(randNum);\r\n\t\tvar e = r.map(numToEmoticon).join(' ');\r\n\t\tvar s;\r\n\t\t\r\n\t\tif(r[0] == r[1] && r[1] == r[2]) {\r\n\t\t\tvar winamount = amount * WIN_MULTIPLIER;\r\n\t\t\tdata.coins += winamount;\r\n\t\t\tdata.wins++;\r\n\t\t\tdata.coinswon += winamount;\r\n\t\t\treturn player + \": \" + e + \", you won \" + winamount + \" \" + COINNAME + \"!\";\r\n\t\t} else {\r\n\t\t\tdata.coinslost += amount;\r\n\t\t\treturn player + \": \" + e + \", you lost \" + amount + \" \" + COINNAME + \"!\";\r\n\t\t}\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"give":{"type":"object","val":{"command":{"type":"string","val":"give"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar player = o.from;\r\n\t\tvar data = checkPlayer(player);\r\n\t\tvar to = o.args[0];\r\n\t\tvar dataTo = checkPlayer(to);\r\n\r\n\t\tvar amount = +o.args[1];\r\n\t\tif(!isNaN(amount)) amount |= 0;\t\r\n\t\tif(!amount || isNaN(amount) || amount <= 0 || player == to)\r\n\t\t\treturn player + ': Use the command like: !give [user] [amount, positive number]';\r\n\r\n\t\tvar playerAmount = data.coins;\r\n\t\tif(playerAmount < amount) return player + \": You don't have enough \" + COINNAME + \".\";\r\n\t\t\r\n\t\tdata.coins -= amount;\r\n\t\tdata.coinsgiven += amount;\r\n\t\tdataTo.coins += amount;\r\n\t\tdataTo.coinsreceived += amount;\r\n\r\n\t\treturn player + \": You gave \" + amount + \" \" + COINNAME + \" to \" + to + \"!\";\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"coins":{"type":"object","val":{"command":{"type":"string","val":"coins"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar player = o.from;\r\n\t\tvar data = checkPlayer(player);\r\n\t\treturn player + \": You have \" + (data.coins) + \" \" + COINNAME + \".\";\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"stats":{"type":"object","val":{"command":{"type":"string","val":"stats"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar player = o.from;\r\n\t\tvar po = checkPlayer(player);\r\n\r\n\t\tvar rest = o.rest.trim();\r\n\r\n\t\tif(rest)\r\n\t\t\treturn player + ': ' + rest.split(/\\s+/g).map(function(x) {return po[x] + ' ' + x}).join(', ');\r\n\r\n\t\treturn player + \": \" +\r\n\t\t\tpo.wins + '/' + po.games + ' wins (' + (0|(po.wins/po.games)*100) + '%), ' +\r\n\t\t\tpo.coinsspent + ' coins spent, ' + \r\n\t\t\tpo.coinswon + ' coins won, ' + \r\n\t\t\tpo.coinslost + ' coins lost, ' + \r\n\t\t\tpo.coinsgiven + ' coins given, ' + \r\n\t\t\tpo.coinsreceived + ' coins received.';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"allstats":{"type":"object","val":{"command":{"type":"string","val":"allstats"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar po;\r\n\t\tvar rest = o.rest.trim();\r\n\t\tif(rest) {\r\n\t\t\tpo = {};\r\n\t\t\tfor(var i = 0, t = rest.split(/\\s+/g), l = t.length; i < l; i++)\r\n\t\t\t\tpo[rest[i]] = 0;\r\n\t\t} else po = {\r\n\t\t\tcoins: 0,\r\n\t\t\twins: 0,\r\n\t\t\tgames: 0,\r\n\t\t\tcoinsspent: 0,\r\n\t\t\tcoinswon: 0,\r\n\t\t\tcoinslost: 0,\r\n\t\t\tcoinsgiven: 0,\r\n\t\t\tcoinsreceived: 0\r\n\t\t};\r\n\r\n\t\tvar players = bot.getAllData();\r\n\r\n\t\tfor(var pl in players)\r\n\t\t\tfor(var k in po)\r\n\t\t\t\tpo[k] += (players[pl][k] || 0)\r\n\t\t\r\n\t\treturn po.wins + '/' + po.games + ' wins (' + (0|(po.wins/po.games)*100) + '%), ' +\r\n\t\t\tpo.coinsspent + ' coins spent, ' + \r\n\t\t\tpo.coinswon + ' coins won, ' + \r\n\t\t\tpo.coinslost + ' coins lost, ' + \r\n\t\t\tpo.coinsgiven + ' coins given, ' + \r\n\t\t\tpo.coinsreceived + ' coins received.';\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"ranking":{"type":"object","val":{"command":{"type":"string","val":"ranking"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar type = o.args[0] || 'coins';\r\n\t\tvar players = bot.getAllData();\r\n\t\tvar a = Object.keys(players)\r\n\t\t\t\t.map(function(name) {return {name: name, val: players[name][type]}})\r\n\t\t\t\t.sort(function(a, b) {return b.val - a.val})\r\n\t\t\t\t.slice(0, 3);\r\n\t\tvar v = {name: '*nobody*', val: 0};\r\n\t\treturn \t\t'1. ' + (a[0] || v).name + ': ' + (a[0] || v).val +\r\n\t\t\t\t\t\t', 2. ' + (a[1] || v).name + ': ' + (a[1] || v).val +\r\n\t\t\t\t\t\t', 3. ' + (a[2] || v).name + ': ' + (a[2] || v).val;\r\n\t}"},"free":{"type":"boolean","val":"true"}}},"add":{"type":"object","val":{"command":{"type":"string","val":"add"},"result":{"type":"function","val":"function (o) {\r\n\t\tvar player = o.from;\r\n\t\tvar to = o.args[0];\r\n\t\tvar data = checkPlayer(to);\r\n\t\tvar amount = +o.args[1];\r\n\t\tif(!isNaN(amount)) amount |= 0;\t\r\n\t\tif(!amount || isNaN(amount) || amount <= 0)\r\n\t\t\treturn player + ': Use the command like: !give [user] [amount, positive number]';\r\n\t\t\r\n\t\tdata.coins += amount;\r\n\r\n\t\treturn player + \": You added \" + amount + \" \" + COINNAME + \" to \" + to + \"!\";\r\n\t}"},"free":{"type":"boolean","val":"false"}}},"turnoffslots":{"type":"object","val":{"command":{"type":"string","val":"turnoffslots"},"result":{"type":"function","val":"function () {working = false}"},"free":{"type":"boolean","val":"false"}}},"turnonslots":{"type":"object","val":{"command":{"type":"string","val":"turnonslots"},"result":{"type":"function","val":"function () {working = true}"},"free":{"type":"boolean","val":"false"}}},"toll":{"type":"object","val":{"command":{"type":"string","val":"toll"},"result":{"type":"string","val":"Toll toll super toll!"},"free":{"type":"boolean","val":"true"}}},"wr":{"type":"object","val":{"command":{"type":"string","val":"wr"},"result":{"type":"string","val":"The WRs are DX 36:09, IW 43:24, HR 52:06, HRDC 1:12:40, TF 22:22"},"free":{"type":"boolean","val":"true"}}},"dxwr":{"type":"object","val":{"command":{"type":"string","val":"dxwr"},"result":{"type":"string","val":"Deus Ex WR is 36:09 by cHuT: http://www.twitch.tv/chutsc2/c/3564259"},"free":{"type":"boolean","val":"true"}}},"iwwr":{"type":"object","val":{"command":{"type":"string","val":"iwwr"},"result":{"type":"string","val":"Deus Ex: Invisible War WR is 43:24 by Heinki: http://www.twitch.tv/heinki/c/4174828"},"free":{"type":"boolean","val":"true"}}},"hrwr":{"type":"object","val":{"command":{"type":"string","val":"hrwr"},"result":{"type":"string","val":"Deus Ex: Human Revolution WR is 52:06 by Heinki: http://www.twitch.tv/heinki/c/5009898"},"free":{"type":"boolean","val":"true"}}},"hrdcwr":{"type":"object","val":{"command":{"type":"string","val":"hrdcwr"},"result":{"type":"string","val":"Deus Ex: Human Revolution Director's Cut WR is 1:12:40 by Heinki: http://www.twitch.tv/heinki/c/5051090"},"free":{"type":"boolean","val":"true"}}},"tfwr":{"type":"object","val":{"command":{"type":"string","val":"tfwr"},"result":{"type":"string","val":"Deus Ex: The Fall WR is 22:22 by SuicideMachine: http://www.twitch.tv/suicidemachine/c/4860060"},"free":{"type":"boolean","val":"true"}}},"lb":{"type":"object","val":{"command":{"type":"string","val":"lb"},"result":{"type":"string","val":"The leaderboards are at http://tinyurl.com/deusexlb or http://speedrun.com/deus_ex"},"free":{"type":"boolean","val":"true"}}},"leaderboards":{"type":"object","val":{"command":{"type":"string","val":"leaderboards"},"result":{"type":"string","val":"The leaderboards are at http://tinyurl.com/deusexlb or http://speedrun.com/deus_ex"},"free":{"type":"boolean","val":"true"}}}}},"vars":{"type":"object","val":{"name":{"type":"string","val":"Labbebot"},"channel":{"type":"array","val":[{"type":"string","val":"#deusex"}]},"server":{"type":"string","val":"irc2.speedrunslive.com"},"post":{"type":"number","val":"6667"},"commandChar":{"type":"string","val":"!"},"users":{"type":"function","val":"function () {return this.users().join(', ')}"},"mods":{"type":"function","val":"function () {return this.mods().join(', ')}"},"commands":{"type":"function","val":"function () {return this.getCommands().join(', ')}"},"freecommands":{"type":"function","val":"function () {return this.getFreeCommands().join(', ')}"},"user":{"type":"function","val":"function () {var u = this.users(); return u[0|u.length*Math.random()]}"},"randuser":{"type":"function","val":"function () {var u = this.users(); return u[0|u.length*Math.random()]}"}}},"_alwaysMod":{"type":"array","val":[{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"},{"type":"string","val":"labbekak"}]}}